trigger:
- master
- feature/*
- issue/*

variables:
  buildConfiguration: 'Release'

stages:
- stage: Excel
  jobs:
  - job: Windows
    timeoutInMinutes: 180

    pool:
      vmImage: 'windows-latest'

    strategy:
      matrix:
        Excel32:
          options: '--forcex86'
          target: 'CiTests'
        Excel64:
          options: ''
          target: 'CiTests'
      maxParallel: 4

    steps:
    - task: UseDotNet@2
      inputs:
        packageType: sdk
        version: 8.0.x
        includePreviewVersions: true
      displayName: 'Use .NET 8.0 sdk'
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          choco install office365business $(options)
        failOnStderr: true
      displayName: 'Install Excel'
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          Import-PfxCertificate -FilePath $(Build.SourcesDirectory)/src/ExcelAddIn.VSTO/ExcelAddIn.VSTO_TemporaryKey.pfx -CertStoreLocation Cert:\CurrentUser\My
        failOnStderr: true
      displayName: 'Add Excel PFX file to the certificate store.'
    - task: PowerShell@2
      inputs:
        targetType: 'filePath'
        filePath: 'build.ps1'
        arguments: '-configuration $(buildConfiguration) -target $(target)'
        failOnStderr: true
      displayName: 'Build'
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'xunit'
        testResultsFiles: '*.xml'
        searchFolder: '$(Build.SourcesDirectory)/artifacts/tests'
      displayName: 'Publish Test results'
    - task: NuGetAuthenticate@1
      displayName: 'NuGet Authenticate'
    - task: NuGetCommand@2
      displayName: 'NuGet push'
      inputs:
        command: push
        packagesToPush: '$(Build.SourcesDirectory)/**/*.nupkg;$(Build.SourcesDirectory)/**/*.snupkg;!$(Build.SourcesDirectory)/**/*.symbols.nupkg'
        publishVstsFeed: 'Excel/Excel'
        allowPackageConflicts: true

